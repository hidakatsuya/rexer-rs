name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: rex
            asset_name: rex-linux-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: rex
            asset_name: rex-darwin-aarch64
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust target
      run: rustup target add ${{ matrix.target }}
    
    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev libgit2-dev
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Prepare binary
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        fi
        cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}
    
    - name: Create tarball
      run: tar -czf ${{ matrix.asset_name }}.tar.gz ${{ matrix.asset_name }}
    
    - name: Upload binary to release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ github.ref_name }} ${{ matrix.asset_name }}.tar.gz --clobber
