name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: rex
            asset_name: rex-linux-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: rex
            asset_name: rex-darwin-aarch64

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev libgit2-dev

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare binary
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          fi
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} rex

      - name: Create tarball
        run: tar -czf ${{ matrix.asset_name }}.tar.gz rex

      - if: github.event_name == 'release'
        name: Upload binary to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} ${{ matrix.asset_name }}.tar.gz --clobber

      - if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_name }}.tar.gz
